alertmanager:
  enabled: false
grafana:
  enabled: true
  defaultDashboardsEnabled: true
  defaultDashboardsTimezone: utc
  adminPassword: blablapassword
  ingress:
    enabled: true
    annotations: 
      kubernetes.io/ingress.class: nginx
    hosts: 
      - grafana.devopsnilesh.xyz
    path: /
    tls: 
     - secretName: wildcard-stage-tls
       hosts:
       - grafana.devopsnilesh.xyz
  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
      labelValue: "1"
      annotations: {}
      multicluster:
        global:
          enabled: false
        etcd:
          enabled: false
      provider:
        allowUiUpdates: false
    datasources:
      enabled: true
      defaultDatasourceEnabled: true
      isDefaultDatasource: true
      uid: prometheus
      url: http://prom-kube-prometheus-stack-prometheus:9090/
      label: grafana_datasource
      labelValue: "1"
  service:
    portName: http-web

  serviceMonitor:
    enabled: true
    path: "/metrics"
    interval: ""
    scheme: http
    tlsConfig: {}
    scrapeTimeout: 30s

nodeExporter:
  enabled: true

prometheus-node-exporter:
  namespaceOverride: ""
  podLabels:
    jobLabel: node-exporter
  releaseLabel: true
  extraArgs:
    - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
    - --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
  service:
    portName: http-metrics
  prometheus:
    monitor:
      enabled: true
      jobLabel: jobLabel


## Deploy a Prometheus instance
prometheus:
  enabled: true
  serviceAccount:
    create: true
  service:
    annotations: {}
    labels: {}
    clusterIP: ""
    port: 9090
    targetPort: 9090
    type: ClusterIP
